global
        log 127.0.0.1 local2

defaults
        log global
        mode http
        retries 3
        option redispatch
        # Enable logging of HTTP request, session state and timers
        option httplog
        # Enable or disable logging of null connections
        option dontlognull
        # Enable or disable HTTP connection closing on the server side
        option http-server-close

        # Enable insertion of the X-Forwarded-For header to requests sent to servers
        option forwardfor

        # Set the maximum time to wait for a connection attempt to a server to succeed.
        timeout connect 5000
        # Set the maximum inactivity time on the server side.
        timeout server 300000
        # Set the maximum inactivity time on the client side.
        timeout client 300000
        # Set additional check timeout, but only after a connection has been already established.
        timeout check 300000

frontend public
        bind :80

        acl is_account_api path_beg /accounts
        acl is_authorization_api path_beg /authorization
        acl is_credential_api path_beg /credentials
        acl is_image_api path_beg /images
        acl is_monitoring_api path_beg /monitoring
        acl is_notification_api path_beg /notification
        acl is_repository_api path_beg /binders
        acl is_routing_api path_beg /routing
        acl is_user_api path_beg /users
        acl is_tracking_api path_beg /tracking

        use_backend account_api if is_account_api
        use_backend authorization_api if is_authorization_api
        use_backend credential_api if is_credential_api
        use_backend image_api if is_image_api
        use_backend monitoring_api if is_monitoring_api
        use_backend notification_api if is_notification_api
        use_backend repository_api if is_repository_api
        use_backend repository_api if is_routing_api
        use_backend user_api if is_user_api
        use_backend tracking_api if is_tracking_api

backend account_api
        server dev 172.20.168.241:8000

backend authorization_api
        server dev 172.20.168.241:8003

backend credential_api
        server dev 172.20.168.241:8001

backend monitoring_api
        server dev 172.20.168.241:8011

backend notification_api
        server dev 172.20.168.241:8013

backend image_api
        server dev 172.20.168.241:8002

backend repository_api
        server dev 172.20.168.241:8008

backend tracking_api
        server dev 172.20.168.241:8009

backend user_api
        server dev 172.20.168.241:8004
